#include<bits/stdc++.h>
#define ld long double
#define tset puts("qwq");
#define test puts("QAQ");
#define pb(a) push_back(a)
#define pii pair<int,int> 
#define mkp make_pair
#define bg begin()
#define ed end()
#define lob lower_bound
#define upb upper_bound
#define fi first
#define se second
#define FR(i,a,b) for(int i=(a),i##E=(b);i<i##E;i++)
#define FL(i,a,b) for(int i=(b)-1,i##E=(a-1);i>i##E;i--)
#define R(i,a,b) for(int i=(a),i##E=(b);i<=i##E;i++)
#define L(i,a,b) for(int i=(b),i##E=(a);i>=i##E;i--)
#define sz(a) int((a).size())
#define us unsigned 
#define ll long long
#define ull unsigned long long
#define int long long
#define Swap(x,y) (x^=y^=x^=y)
template<typename T> inline void ckmax(T& x, T y) { x = (y > x ? y : x); }
template<typename T> inline void ckmin(T& x, T y) { x = (y < x ? y : x); }
using namespace std;
//const int inf=0x7f7f7f7f7f7f7f3f;
const int inf=0x7f7f7f7f;
//const int mod=1e9+7;
const double Pi=acos(-1);
const int mod=998244353;
const ld eps=1e-8;
inline int fpow(int a,int b,int p=mod){int res=1;while(b){if(b&1)res=res*a%p;a=a*a%p;b>>=1;}return res;}
/*
const int qwq=2000010;
int F[qwq],inv[qwq],Finv[qwq];
void init_C()
{
    F[0]=Finv[0]=inv[1]=1;
    R(i,2,qwq-10) inv[i]=(mod-mod/i)*inv[mod%i]%mod;
    R(i,1,qwq-10) F[i]=1ll*(F[i-1]*i)%mod,Finv[i]=1ll*(Finv[i-1]*inv[i])%mod;
}

inline int C(int n,int m){ if(m<0||m>n||n<0) return 0;return 1ll*F[n]%mod*1ll*Finv[m]*1ll%mod*1ll*Finv[n-m]%mod;}
*/

//#define getchar()(p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)
//char buf[1<<21],*p1=buf,*p2=buf;
inline int read()
{
    char c=getchar();int x=0;bool f=0;
    for(;!isdigit(c);c=getchar())f^=!(c^45);
    for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+(c^48);
    if(f)x=-x;return x;
}
inline void write(int x){if (x<0){putchar('-');write(-x);return;}if (x>=10) write(x/10);putchar(x%10+'0');}
inline void writesp(int x){write(x),putchar(' ');}
inline void writeln(int x){write(x);putchar('\n');}
/*
unsigned seed = std::chrono::system_clock::now().time_since_epoch().count();
mt19937 rand_num(seed);  
uniform_int_distribution<long long> dist(0, 10000000);  // ¸ø¶¨·¶Î§
printf("%lld ",dist(rand_num));
*/
int s,t,p;
int n,m;

namespace sub1//dp
{
	int c[7777][7777];
	inline void init(){
		c[0][0]=c[1][0]=c[1][1]=1;
		R(i,2,7000) {c[i][0]=1; R(j,1,i) c[i][j]=(c[i-1][j]+c[i-1][j-1]),c[i][j]>=p?c[i][j]-=p:1;}
	}
	inline int query(int n,int m){return c[n][m];}
}
namespace sub2
{
	const int qwq=1e7+10;
	int F[qwq],inv[qwq],Finv[qwq];
	void init_C()
	{
	    F[0]=Finv[0]=inv[1]=1;
	    R(i,2,qwq-10) inv[i]=(p-p/i)*inv[p%i]%p;
	    R(i,1,qwq-10) F[i]=1ll*(F[i-1]*i)%p,Finv[i]=1ll*(Finv[i-1]*inv[i])%p;
	}
	inline int C(int n,int m){ if(m<0||m>n||n<0) return 0;return 1ll*F[n]%p*1ll*Finv[m]*1ll%p*1ll*Finv[n-m]%p;}
}
namespace sub3
{
	const int qwq=1e7+10;
	int F[qwq];
	void init() {
		F[0]=1;
		R(i,1,qwq-10) F[i]=F[i-1]*i%p;
	}
	inline int C(int n,int m) {
		if(m>n||n<0) return 0;
		return 1ll*F[n]*fpow(F[m],p-2,p)%p*fpow(F[n-m],p-2,p)%p;
	}
	inline int Lucas(int n,int m) {
		if(!m) return 1;
		return 1ll*C(n%p,m%p)*Lucas(n/p,m/p)%p;
	}
}
namespace sub4and5
{
	int blo[2222]={1,187142323,796024455,596316874,914550501,623627864,330880448,860856448,14554181,406984354,833655840,531854347,346814021,595254166,214785669,671639287,332670261,822163165,821516475,980160849,732727656,384818512,670866031,552245646,122041708,160030060,932427947,204604906,40172755,853172441,384710263,513947030,150494228,880392466,600187555,101492974,159596479,19289865,833415116,368475610,34035221,319020540,819215905,183951017,528753617,102311167,826897016,393771832,824079438,649905009,545208507,820215494,451653192,391564011,350331071,300738984,40359077,658294019,348600216,195969604,316588744,885534177,575985717,815021282,676542561,980836133,911472795,733542862,641311602,366263604,335481797,338568924,544232708,563955060,602069285,760025067,19132477,918098612,333853788,947701400,586537547,292624291,234426668,800612279,858022481,708205284,828484950,411054570,390266531,566538086,206579820,29923813,821511104,800834612,303004806,247687458,272876741,705428274,276979681,631026019,506268060,570335076,178011904,666780762,922700952,443834893,905906528,486514627,382643551,171703479,117565665,517407446,173655801,419427422,198854937,394880724,693543402,870541371,173049798,689071146,232240472,882275125,451486982,67310823,705767517,808258749,375160961,827220611,281445790,276074031,552199946,738026177,752565984,555396846,554596291,640377761,695413992,392473715,171001823,665296408,826373774,470555993,119542277,708454989,388387295,904737188,93458558,241322250,91306733,729012741,686156489,322168493,445043596,302400315,425218947,681055904,548996041,83494668,498240557,922935675,833792655,984614775,186103548,482353858,30003378,930484262,915887245,377742973,748280238,738257061,474842829,891554540,848867625,234032702,97522948,390377694,57638961,517050512,76590405,935404028,946647976,145066889,809196985,390872748,139804320,70091750,766389361,923139353,870843400,504698718,110877109,445252148,188912279,763080960,912911566,69072133,405540822,936036643,381995158,413126101,544711799,963056710,802417742,232957550,886754778,722417626,283059531,558071312,248332941,631542916,405207112,951352281,737310856,1884078,273169986,607304611,133670326,277617484,219065921,150286151,18058363,538224444,944959217,244779964,889316514,495867250,141178261,127826711,951127803,976295813,715390025,821228911,667630300,863799064,109394926,286059202,351853877,245942980,909702106,238607386,726437551,252862701,400731148,985130003,587766057,674313019,790870663,237717712,175635693,281918691,117153405,177896584,503281057,511479298,144672106,338909703,186743862,718791946,448354377,773628426,140617938,327840352,311999258,852238642,72355546,261113192,545023245,83919888,258157503,467945713,884328111,353885019,308491660,364866697,52859469,202713771,301134762,413840829,656290745,690001441,640827004,967269373,721695220,518017122,247686020,159111724,461871193,696437508,896456400,633895291,811539323,825671035,714976582,163789266,701148374,4302336,752958782,697876761,611607455,155312119,79781699,529216101,861214371,552748497,888392797,973366814,828804575,937624887,367924553,174378703,897917455,296804580,566524382,830957214,925752178,420541799,831220038,728454812,249103550,843439912,217214373,888470703,174714168,660774027,220169704,652678397,942859297,313241084,850416074,924217172,105376215,760049296,438727956,966925552,672734939,457743498,817586763,138937737,518745177,457207833,276036750,396363623,354883510,364805944,288465914,308380947,884361465,816835037,721146367,640398562,655645460,972255064,91321067,207305412,371104474,48682076,191863723,106855733,212604510,896425714,786336279,758611451,330158910,552903430,981930399,887284732,718835852,487589844,247311789,812972737,328970139,396332115,181113364,853292312,423202591,761699708,373779604,113395585,694680152,245336149,866682684,125581313,112728599,384136177,376051822,90612675,350613655,961731838,346122597,481666406,674279751,669915134,541962510,747002087,713230928,752481486,564830671,600061073,323738297,770230548,287671032,662038180,358919724,676552828,15007469,269766986,377684984,268243673,832405770,546702921,737863144,527495727,491763782,193660195,551134448,919894484,419994315,519738858,721553288,846760390,702523597,309635269,745987221,789322533,922549537,50865043,845328908,277896830,714787224,625646122,369182214,937991501,558823478,639095619,216988792,365786018,229130073,16441988,840849387,805651582,773259009,802820829,131583878,632449155,644504208,30419459,791826050,930624835,852592530,737313828,111276893,638584664,818863012,832413555,420320241,244467770,949582565,295027067,946989153,521344100,670313309,220131604,924835496,971100089,440777209,826265493,97151070,391726954,247747483,242366855,516432938,914659468,642786658,876705126,949716511,444094191,835786784,189972995,675202693,394994592,301029012,674180764,742398359,959486572,609124230,937766095,941601677,947031904,651200723,299272677,673298635,359478109,659955603,735928439,287321583,868198597,690154031,337974759,594319722,618177955,573994984,578943699,742314795,535915879,94704928,965907646,221925665,409911108,631573115,455338890,612745912,162620329,948010625,174446986,700818032,624900982,552836752,871469759,365457908,965740114,927606072,878832641,614249794,192152781,908362104,566073550,595475717,871861964,926829282,218872798,908752311,931947039,853945023,286374238,953559789,880336545,599650552,256297014,255028448,308653660,474075900,255585641,222918487,548447756,718045173,388854780,573433356,515575336,153529304,642060086,888483202,670313061,173199128,344355077,211287250,100189123,773087916,713277676,961178945,612179701,496971759,101615911,220987644,498311664,844520957,683379259,259240348,447193381,252082398,544001661,445719559,750732621,901599231,109218884,443773412,548033568,948511601,721084229,357347436,481515942,730387628,503085651,223341051,815903428,749801573,334885743,876302615,503803540,217613784,392534750,232218076,893678582,539001034,474310493,798322301,231721356,218582540,772169831,626622487,715477049,742756734,462660570,612760233,74340200,72059034,671823672,718995099,531213622,595389696,518422245,237594135,650760543,200411187,269285553,667327485,465211069,256667636,750117193,933488501,269173385,663053607,889679555,811351181,958902297,853870159,62402409,748259163,986063012,124164816,269013494,537087913,969123613,666765961,40501448,175477963,286592050,193241990,584459532,23840954,8264903,873938719,459233410,166464286,80557198,433418091,580971332,497580226,355493809,673447603,492495082,826426395,444568444,394411763,977026668,360211014,229855967,197991923,648599644,856505535,677556704,325666688,900203387,184139999,426214511,945243221,386454418,160235707,248807068,250959694,233191193,2191828,901220987,282424433,475044977,436357857,926316039,516167226,193691951,190701933,909075057,786112034,188514425,899612407,286251537,163976105,30019651,906613099,782493409,853746420,286653714,553631971,426963589,361760886,983685054,419062603,302767023,171297128,225210951,191882124,60634971,51568171,562983131,204715419,183566168,276171166,615419476,344382954,480158153,802684215,40174926,206707897,590246341,593320145,878128430,465989488,749570167,187044007,419699361,396315381,750385636,391667731,656087823,257034880,89255697,692374171,604947226,476935929,953526515,21874873,674797408,803407599,22554175,952628462,18653828,927429592,757681534,73507840,312895519,352900288,188075141,12206799,133527905,51949427,140975223,863081148,59215985,288903997,320837890,963193528,123471668,511621808,463263515,865596423,548465725,353052244,872053396,538664274,655407188,2573502,831928009,772287179,547498225,141075040,122457246,707719861,794973480,915004119,678515194,225376470,134842161,313106351,1629499,870863860,411670648,342071802,265769800,358859939,20591569,579224315,617209068,415812467,334226426,403406769,225526518,411753420,512318142,820453170,603644245,372220074,11998264,536413695,16965043,201516782,424238422,943193558,218525078,984289287,461546440,62719106,379629428,763148293,641544481,254364584,300255531,234501930,150896699,457760886,488712076,960720602,393453192,771557187,428394983,105941911,769640186,455505101,743371401,935209969,746857728,935640947,259740169,157247760,686012810,337904334,289407955,373510154,19536133,230157941,908934043,730606012,321448905,185475971,754075136,466415123,427810475,769842260,864535682,506466886,139292288,706683328,897387201,517661450,205744478,921277985,931348671,911644448,431839017,548304623,520984268,351584221,939655476,290471030,868617133,211234310,961617281,134088395,837008968,160338146,959400038,822018130,628803011,62265336,656402912,325963793,26001836,410848505,264793769,944529132,315266012,346707363,458917832,763248924,806826405,916736917,962204141,207892461,242726978,238224020,26327533,708446364,272450352,992293822,775234193,919211209,938060844,750185149,702429415,554701193,710567700,600825502,684764381,719169602,937385045,691491630,769560352,330903187,40993711,500502656,598410600,341630268,687465785,612759169,547413634,130492893,173657981,774014314,941600951,170661061,968020070,971483785,785513967,447222237,544563167,286769863,817931081,565858314,69656699,637587950,938409154,582059008,639019927,554955500,112487365,886890211,304711582,71717720,961628039,17532161,593450905,150029906,306093006,70255649,741557556,365610561,960130817,501529947,304180483,654256447,855437455,19997707,784924146,395529997,362087694,569026004,627152463,782699783,234683685,907910635,987893927,659229224,128019192,62806842,279150975,819869053,626316896,968603057,822203768,934433124,386398410,254146120,934786222,766631257,170653709,732614296,333073045,684629909,729108319,736921347,206033114,659938697,975967666,53842115,806117495,548742063,586082536,602488502,909741023,112712901,668645110,540161396,675208713,993302799,738190542,37239095,865784575,677110174,443869843,367028173,357463998,670553151,704489618,801661499,536047622,524252054,221630511,770454472,134084537,549737824,100476545,444374536,127513126,887890124,727897980,106866216,397669108,262846984,729720334,346272300,967750442,305614829,632617040,493171177,788481986,744344879,400483531,80856091,840160881,594952891,747979126,848643865,426428476,842341383,557481044,338060455,526610238,146278719,669317759,199039337,986724034,801121834,197588605,261274540,982549733,847203458,913767172,173133127,293683814,760676118,435227659,4717993,123229359,813097823,1323886,143686780,503119497,669777197,504040630,882012844,313004905,3109593,180559952,806951470,335115381,913680176,720597117,12520664,905122161,393634553,685227047,956226452,406210712,325795100,110114569,107727990,272689992,495983082,880348000,212376682,235492719,59888024,792517877,284803450,275882738,805263257,318804570,261005717,377403437,789721035,71452646,881104891,947296371,708818585,191538961,247822034,432682187,94383709,673933870,142912291,549371805,4452732,91003219,515264973,252615615,97573992,148392333,562169673,524126897,852509887,26157762,885262212,144113925,786127243,669207238,689613149,326174225,498910857,802186160,589512887,186815700,810913393,31789240,758925811,178469309,579829591,635154227,749790553,610456697,800766132,81856271,779029568,974903132,653691911,959051187,256850511,76803592,599605496,875880304,910589926,431450710,196243872,45548202,8525751,857902646,271351399,665110057,520181428,696213291,607863542,235994905,988186568,462276586,641582714,216264505,396173607,448295531,594948276,443549763,578592712,790970771,364379250,798556379,623250998,802146866,243633104,354401895,322291721,211328914,702023379,649237321,657295852,263662830,18938709,565563914,632046454,733885460,135290915,610424991,86000108,810733871,339995562,956401237,686098470,184879749,573876820,118527211,293643564,804930040,753855318,47001928,611562716,395484213,573258936,579446652,138021221,717490096,391316764,283614605,370909756,960901741,754870233,119030022,612689791,849678837,545346747,799227111,717332626,979541482,880030358,54140494,187967995,967476181,214821357,794857307,667478516,787570970,969525034,609346370,522247532,144228432,674441346,312852149,980735523,392047058,364301153,822514219,213660206,234729712,857115611,219067891,162497346,383800090,193188049,758659608,962333047,686459451,47718874,954947696,972423996,363566630,643066127,632826195,622610957,520622939,107689716,287288499,956720795,395881057,634380967,806721716,365901116,242045474,83334648,393617876,467700392,243707311,233814369,841864935,627013238,806669488};
	inline int get_F(int x){
		int tmp=x/(int)(8e5);
		int val=blo[tmp];
		R(i,tmp*(int)8e5,x) val=val*i%p; 
		return val;
	}
	inline int C(int n,int m) {
		if(m>n||n<0) return 0;
		return 1ll*get_F(n)*fpow(get_F(m),p-2,p)%p*fpow(get_F(n-m),p-2,p)%p;
	}
	inline int Lucas(int n,int m) {
		if(!m) return 1;
		return 1ll*C(n%p,m%p)*Lucas(n/p,m/p)%p;
	}
}
namespace sub6
{
	bool vis[1177777];
	int pri[888888],min_pri[888888],tot_pri,cnt[1177777];
	inline void esga(){
		R(i,2,1e6) {
			if(!vis[i]) {
				pri[++tot_pri]=i;
				min_pri[i]=tot_pri;
			} 
			for(int j=1;j<=tot_pri&&i*pri[j]<=1e6;j++) {
				vis[i*pri[j]]=1;min_pri[i*pri[j]]=j;
				if(i%pri[j]==0) break;
			}
		}
	}
	inline int C(int n,int m){
		memset(cnt,0,sizeof(cnt));
		L(i,n-m+1,n) {
			int x=i;
			while(x!=1) cnt[min_pri[x]]++,x/=pri[min_pri[x]];
		}
		R(i,1,m) {
			int x=i;
			while(x!=1) cnt[min_pri[x]]--,x/=pri[min_pri[x]];
		}
		int ans=1;
		R(i,1,tot_pri){
			while(cnt[i]>0) ans=ans*pri[i]%p,cnt[i]--; 
		}
		return ans;
	}
}
namespace sub7 
{
	const int N=1e6+10;
	//excrt:
	int a[N],b[N];
	int pri[N],cnt_pri[N],tot_pri;
	int n,m,p;
	inline int QuickMul(int a,int b,int mod)
	{
	    int c=a*b-(int)((ld)a*b/mod+0.5)*mod;
	    return c<0?c+mod:c;
	}
	int exgcd(int a,int b,int &x,int &y) {
		if(!b) {
			x=1,y=0;
			return a;
		}
		int d=exgcd(b,a%b,y,x);y-=x*(a/b);
		return d;
	}
	inline int get_inv(int a,int mod){
		int x,y;
		exgcd(a,mod,x,y);
		return (x%mod+mod)%mod;
	}

	int excrt(){
		int M=b[1],ans=a[1];
		int x,y,k;
		R(i,2,tot_pri) {
			int A=M,B=b[i],C=(a[i]-ans%B+B)%B;//ax \equiv c(\bmod b)
			int D=exgcd(A,B,x,y),BG=B/D;
			if(C%D) return -1;
			x=QuickMul(x,C/D,BG);
			ans+=x*M;
			M*=BG;
			ans=(ans%M+M)%M;
		}
		return ans;
	}
	int calc(int n,int p,int pk)
	{
		if(!n) return 1;
		int ans=1;
		R(i,1,pk) if(i%p) ans=ans*i%pk;
		ans=fpow(ans,n/pk,pk);
		R(i,1,n%pk) if(i%p) ans=ans*i%pk;
		return ans*calc(n/p,p,pk)%pk;
	}
	int solve(int n,int m,int p,int pk)
	{
		if(n==0||m==0||n==m) return 1;
		if(n<m) return 0;
		int cnt=0,k=n-m;
		int nn=calc(n,p,pk),mm=calc(m,p,pk),nm=calc(k,p,pk);
		while(n) n/=p,cnt+=n;
		while(m) m/=p,cnt-=m;
		while(k) k/=p,cnt-=k;
		return nn*get_inv(mm,pk)*get_inv(nm,pk)%pk*fpow(p,cnt,pk)%pk;
	}
	void init() {
		int tmp=p;
		for(int i=2;i*i<=p;i++) {
			if(tmp%i==0)
			{
				pri[++tot_pri]=i;
				while(tmp%i==0) tmp/=i,cnt_pri[tot_pri]++;
			}
		}
		if(tmp!=1) pri[++tot_pri]=tmp,cnt_pri[tot_pri]++;
	}
	int C(int n,int m) {
		R(i,1,tot_pri) b[i]=fpow(pri[i],cnt_pri[i]),a[i]=solve(n,m,pri[i],b[i]);
		return excrt();
	} 
}
signed main()
{
	s=read(),t=read(),p=read();
	if(s==1) 
	{
		sub1::init();
		for(;t--;) 
		{
			n=read(),m=read();
			printf("%lld\n",sub1::query(n,m));
		}
		return 0;
	}
	if(s==2) 
	{
		sub2::init_C();
		for(;t--;) 
		{
			n=read(),m=read();
			printf("%lld\n",sub2::C(n,m));
		}
		return 0;
	}
	if(s==3) 
	{
		sub3::init();
		for(;t--;)
		{
			n=read(),m=read();
			printf("%lld\n",sub3::Lucas(m,n));
		}
		return 0;
	}
	if(s==4||s==5)
	{
		for(;t--;) 
		{
			n=read(),m=read();
			printf("%lld\n",sub4and5::Lucas(m,n));
		}
		return 0;
	}
	if(s==6) 
	{
		sub6::esga();
		for(;t--;)
		{
			n=read(),m=read();
			printf("%lld\n",sub6::C(n,m));
		}
		return 0;
	}
	if(s==7)
	{
		sub7::init();
		for(;t--;) 
		{
			n=read(),m=read();
			printf("%lld\n",sub7::C(n,m));
		}
	}
}